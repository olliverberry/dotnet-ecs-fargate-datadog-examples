{
    "family": "weatherservice-datadog",
    "containerDefinitions": [
        {
            "name": "weatherservice",
            "image": "smehrens/fargate-dotnet:0.0.1",
            "cpu": 0,
            "portMappings": [
                {
                    "name": "http",
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp",
                    "appProtocol": "http"
                }
            ],
            "essential": true,
            "environment": [
                {
                    "name": "DD_ENV",
                    "value": "development"
                },
                {
                    "name": "DD_VERSION",
                    "value": "0.0.1"
                },
                {
                    "name": "DD_LOGS_INJECTION",
                    "value": "true"
                },
                {
                    "name": "DD_RUNTIME_METRICS_ENABLED",
                    "value": "true"
                }
            ],
            "mountPoints": [],
            "volumesFrom": []
        },
        {
            "name": "datadog",
            "image": "public.ecr.aws/datadog/agent:7",
            "cpu": 0,
            "portMappings": [],
            "essential": true,
            "environment": [
                {
                    "name": "ECS_FARGATE",
                    "value": "true"
                },
                {
                    "name": "DD_API_KEY",
                    "value": "<insert_dd_api_key>"
                },
                {
                    "name": "DD_APM_ENABLED",
                    "value": "true"
                }
            ],
            "mountPoints": [],
            "volumesFrom": []
        },
        {
            "name": "busybox",
            "image": "busybox",
            "cpu": 0,
            "essential": "true",
            "entryPoint": [
                "sh",
                "-c",
                "while true; do wget -qO - http://localhost/weatherforecast; sleep 5; done"
            ]
        }
    ],
    "taskRoleArn": "<insert_role_arn>",
    "executionRoleArn": "<insert_role_arn>",
    "networkMode": "awsvpc",
    "requiresCompatibilities": [
        "FARGATE"
    ],
    "cpu": "1024",
    "memory": "3072",
    "runtimePlatform": {
        "cpuArchitecture": "X86_64",
        "operatingSystemFamily": "LINUX"
    }
}